@startuml
title Sequence Diagram: POST /bim_models - Upload BIM Model

actor User as user
participant "Web API" as web_api
participant "PostgreSQL" as postgres
participant "BIM Upload Service" as bim_upload
participant "S3 Storage" as s3
participant "OpenAI API" as openai
participant "ClickHouse" as clickhouse

user -> web_api: POST /bim_models with BIM info
web_api -> web_api: Validate request\n(check bim_path)
web_api -> postgres: Check if any BIM upload in progress
postgres --> web_api: Return status

alt BIM upload already in progress
    web_api --> user: HTTP 400 - Upload already running
else
    web_api -> postgres: Generate BIM ID and store initial metadata
    postgres --> web_api: Confirm storage
    web_api -> bim_upload: POST /bim_models with BIM ID
    bim_upload --> web_api: 200 OK (async processing started)
    web_api --> user: Return BIM ID (202 Accepted)
    
    bim_upload -> s3: Download BIM files (nodes, edges, properties)
    s3 --> bim_upload: Return files
    bim_upload -> bim_upload: Parse JSON files\nCreate element descriptions
    bim_upload -> openai: Request embeddings for element descriptions
    openai --> bim_upload: Return embeddings
    bim_upload -> clickhouse: Store embeddings with temporary cluster IDs
    bim_upload -> postgres: Update upload progress (0-50%)
    bim_upload -> bim_upload: Cluster elements using DBSCAN
    bim_upload -> clickhouse: Update with final cluster IDs
    bim_upload -> postgres: Update upload status to COMPLETED (100%)
end

@enduml
